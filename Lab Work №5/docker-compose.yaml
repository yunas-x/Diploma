version: "3"

services:
  nginx-balancer:
    image: nginx
    container_name: nginx-balancer
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app_auth
      - app_fields
      - app_programs
    ports:
      - "82:4000"

  app_auth:
    build:
      context: auth/app
    expose:
      - "5002"
    depends_on:
      - db_auth
    environment:
      - POSTGRES_CONNECTION_STRING=$POSTGRES_CONNECTION_STRING_AUTH
      - API_TOKEN=$API_TOKEN
      - SECRET=$SECRET
    deploy:
      replicas: 2
    restart: unless-stopped

  app_fields:
    build:
      context: fields/app
    expose:
      - "5001"
    depends_on:
      - db_fields
      - app_auth
    environment:
      - POSTGRES_CONNECTION_STRING=$POSTGRES_CONNECTION_STRING_FIELDS
      - PROGRAMS_URL=$PROGRAMS_URL
      - AUTH_URL=$AUTH_URL
    deploy:
      replicas: 2
    restart: unless-stopped

  app_programs:
    build:
      context: programs/app
    expose:
      - "5000"
    depends_on:
      - db_programs
      - app_auth
    environment:
      - POSTGRES_CONNECTION_STRING=$POSTGRES_CONNECTION_STRING_PROGRAMS
      - FIELDS_URL=$FIELDS_URL
      - AUTH_URL=$AUTH_URL
    deploy:
      replicas: 2
    restart: unless-stopped

  db_auth:
    container_name: postgres_auth_container
    image: postgres:15-alpine
    volumes:
      - ./auth/postgres_data:/var/lib/postgresql/data/
      - ./auth/db_init:/docker-entrypoint-initdb.d
    ports:
      - "5434:5432"
    expose:
      - 5434
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  db_fields:
    container_name: postgres_fields_container
    image: postgres:15-alpine
    volumes:
      - ./fields/postgres_data:/var/lib/postgresql/data/
      - ./fields/db_init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    expose:
      - 5433
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  db_programs:
    container_name: postgres_programs_container
    image: postgres:15-alpine
    volumes:
      - ./programs/postgres_data:/var/lib/postgresql/data/
      - ./programs/db_init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    expose:
      - 5432
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
